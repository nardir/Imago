// Code generated by Microsoft (R) AutoRest Code Generator 0.9.6.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using APIApp.Client;
using APIApp.Client.Models;
using Microsoft.Rest;

namespace APIApp.Client
{
    public static partial class ArticleExtensions
    {
        /// <param name='operations'>
        /// Reference to the APIApp.Client.IArticle.
        /// </param>
        /// <param name='code'>
        /// Required.
        /// </param>
        public static ArticleDTO GetArticleDTO(this IArticle operations, string code)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IArticle)s).GetArticleDTOAsync(code);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the APIApp.Client.IArticle.
        /// </param>
        /// <param name='code'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<ArticleDTO> GetArticleDTOAsync(this IArticle operations, string code, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<APIApp.Client.Models.ArticleDTO> result = await operations.GetArticleDTOWithOperationResponseAsync(code, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the APIApp.Client.IArticle.
        /// </param>
        public static IList<ArticleDTO> GetArticlesDTO(this IArticle operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IArticle)s).GetArticlesDTOAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the APIApp.Client.IArticle.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<IList<ArticleDTO>> GetArticlesDTOAsync(this IArticle operations, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<System.Collections.Generic.IList<APIApp.Client.Models.ArticleDTO>> result = await operations.GetArticlesDTOWithOperationResponseAsync(cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
