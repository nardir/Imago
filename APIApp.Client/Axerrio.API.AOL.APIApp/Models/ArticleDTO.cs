// Code generated by Microsoft (R) AutoRest Code Generator 0.9.6.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using APIApp.Client.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace APIApp.Client.Models
{
    public partial class ArticleDTO
    {
        private int? _articleKey;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? ArticleKey
        {
            get { return this._articleKey; }
            set { this._articleKey = value; }
        }
        
        private string _code;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Code
        {
            get { return this._code; }
            set { this._code = value; }
        }
        
        private string _description;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set { this._description = value; }
        }
        
        private IList<PictureDTO> _pictures;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<PictureDTO> Pictures
        {
            get { return this._pictures; }
            set { this._pictures = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the ArticleDTO class.
        /// </summary>
        public ArticleDTO()
        {
            this.Pictures = new LazyList<PictureDTO>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken articleKeyValue = inputObject["ArticleKey"];
                if (articleKeyValue != null && articleKeyValue.Type != JTokenType.Null)
                {
                    this.ArticleKey = ((int)articleKeyValue);
                }
                JToken codeValue = inputObject["Code"];
                if (codeValue != null && codeValue.Type != JTokenType.Null)
                {
                    this.Code = ((string)codeValue);
                }
                JToken descriptionValue = inputObject["Description"];
                if (descriptionValue != null && descriptionValue.Type != JTokenType.Null)
                {
                    this.Description = ((string)descriptionValue);
                }
                JToken picturesSequence = ((JToken)inputObject["Pictures"]);
                if (picturesSequence != null && picturesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken picturesValue in ((JArray)picturesSequence))
                    {
                        PictureDTO pictureDTO = new PictureDTO();
                        pictureDTO.DeserializeJson(picturesValue);
                        this.Pictures.Add(pictureDTO);
                    }
                }
            }
        }
    }
}
